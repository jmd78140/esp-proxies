<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ai.learningsystems.gloobermkp.service-providers</groupId>
	<artifactId>esp-proxies</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>ESP Proxies</name>
	<description>
		External Services Provider Proxies - This proxifies the access
		to Gloober Market Place external service providers like :
		Google, OpenAI, MS, Entropic, ...
	</description>

	<properties>
		<java.version>20</java.version>

		<!-- Dependencies versions -->
		<slf4j-api.version>2.0.16</slf4j-api.version>
		<logback-classic.version>1.5.12</logback-classic.version>
		<lombok.version>1.18.36</lombok.version>
		<spring-core.version>6.2.0</spring-core.version>
		<spring-starter-webflux.version>3.4.0</spring-starter-webflux.version>
		<jackson-databind.version>2.18.2</jackson-databind.version>
		<jackson-dataformat-yaml.version>2.18.2</jackson-dataformat-yaml.version>
		<jtokkit.version>1.1.0</jtokkit.version>
		<pf4j.version>3.13.0</pf4j.version>
		<spring-starter-test.version>3.4.0</spring-starter-test.version>
		<spring-reactor-test.version>3.7.0</spring-reactor-test.version>

		<!-- Plugins versions and configuration -->
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>

		<maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
		<maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <maven.compiler.release>20</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- ! needed since Java 23 for @Slf4j annotation processing 			-->
		<!-- Otherwise log symbol will be unknown at compile time 	 			-->
		<!-- if not defined you can compile on command line using :  			-->
		<!-- mvn -Dmaven.compiler.proc=full clean package 						-->
		<!-- see https://dzone.com/articles/using-lombok-library-witk-jdk-23	-->
		<maven.compiler.proc>full</maven.compiler.proc>

	</properties>

	<modules>
		<module>proxy</module>
		<module>plugin-shared-interfaces</module>
	</modules>

	<dependencies>

		<!-- SLF4J API -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!-- Logback Classic (implémentation de SLF4J) -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>

		<!-- Webflux dependency for reactive applications in Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>


		<!-- Jackson for JSON handling -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>

		<dependency>
			<groupId>com.knuddels</groupId>
			<artifactId>jtokkit</artifactId>
		</dependency>

		<dependency>
			<groupId>org.pf4j</groupId>
			<artifactId>pf4j</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Reactor Test dependency for reactive stream testing -->
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>

			<!-- SLF4J API -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j-api.version}</version>
			</dependency>

			<!-- Logback Classic (implémentation de SLF4J) -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-classic.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>

			<!--
			https://mvnrepository.com/artifact/org.springframework/spring-core -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring-core.version}</version>
			</dependency>

			<!-- Webflux dependency for reactive applications in Spring Boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-webflux</artifactId>
				<version>${spring-starter-webflux.version}</version>
			</dependency>

			<!-- Jackson for JSON handling -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
				<version>${jackson-dataformat-yaml.version}</version>
			</dependency>

			<dependency>
				<groupId>com.knuddels</groupId>
				<artifactId>jtokkit</artifactId>
				<version>${jtokkit.version}</version>
			</dependency>

			<dependency>
				<groupId>org.pf4j</groupId>
				<artifactId>pf4j</artifactId>
				<version>${pf4j.version}</version>
			</dependency>

			<!-- Test dependencies -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-starter-test.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Reactor Test dependency for reactive stream testing -->
			<dependency>
				<groupId>io.projectreactor</groupId>
				<artifactId>reactor-test</artifactId>
				<version>${spring-reactor-test.version}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<build>
		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>${maven.compiler.encoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<release>${maven.compiler.release}</release>
						<encoding>${maven.compiler.encoding}</encoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>